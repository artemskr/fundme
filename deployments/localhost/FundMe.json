{
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "s_priceFeedAddress",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "FundMe__NeedToSpendMoreETH",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "FundMe__NotOwner",
            "type": "error"
        },
        {
            "inputs": [],
            "name": "FundMe__WithdrawCallFailed",
            "type": "error"
        },
        {
            "stateMutability": "payable",
            "type": "fallback"
        },
        {
            "inputs": [],
            "name": "MINIMUM_USD",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "cheaperWithdraw",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "fund",
            "outputs": [],
            "stateMutability": "payable",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "funder",
                    "type": "address"
                }
            ],
            "name": "getAddressToAmountFunded",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "index",
                    "type": "uint256"
                }
            ],
            "name": "getFunder",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getOwner",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getPriceFeed",
            "outputs": [
                {
                    "internalType": "contract AggregatorV3Interface",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getVersion",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "withdraw",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "stateMutability": "payable",
            "type": "receive"
        }
    ],
    "transactionHash": "0x41c72f1d94eda4d857be16258d3a82b44b804dcfeb80f2ef9b92f21327e330c6",
    "receipt": {
        "to": null,
        "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
        "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
        "transactionIndex": 0,
        "gasUsed": "1071763",
        "logsBloom": "0x
        "blockHash": "0xb0a7be6c49e8bb147568d188847ca4db1e795093b5944995c9ad921be85d6e65",
        "transactionHash": "0x41c72f1d94eda4d857be16258d3a82b44b804dcfeb80f2ef9b92f21327e330c6",
        "logs": [],
        "blockNumber": 2,
        "cumulativeGasUsed": "1071763",
        "status": 1,
        "byzantium": true
    },
    "args": ["0x5FbDB2315678afecb367f032d93F642f64180aa3"],
    "numDeployments": 1,
    "solcInputHash": "b8ef125a482ceabe9a82b83313caadd5",
    "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NeedToSpendMoreETH\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FundMe__WithdrawCallFailed\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Patric Collins\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{\"fund()\":{\"details\":\"This implements price feeds as our library\"}},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"fund()\":{\"notice\":\"This function funds this contract\"}},\"notice\":\"This contract is to demo sample funcding contract\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\nerror FundMe__NeedToSpendMoreETH();\\nerror FundMe__WithdrawCallFailed();\\n\\n/**\\n * @title A contract for crowd funding\\n * @author Patric Collins\\n * @notice This contract is to demo sample funcding contract\\n * @dev This implements price feeds as our library\\n */\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    // State variables\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n\\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address private immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address s_priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(s_priceFeedAddress);\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    }\\n\\n    fallback() external payable {\\n        fund();\\n    }\\n\\n    /**\\n     * @notice This function funds this contract\\n     * @dev This implements price feeds as our library\\n     */\\n    function fund() public payable {\\n        // require(\\n        //     msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n        //     \\\"You need to spend more ETH!\\\"\\n        // );\\n        if (msg.value.getConversionRate(s_priceFeed) < MINIMUM_USD) {\\n            revert FundMe__NeedToSpendMoreETH();\\n        }\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function getVersion() public view returns (uint256) {\\n        return s_priceFeed.version();\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        // require(callSuccess, \\\"Call failed\\\");\\n        if (!callSuccess) {\\n            revert FundMe__WithdrawCallFailed();\\n        }        \\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n        // mapping can't be in memory\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function getOwner() public view returns (address) {\\n        return i_owner;        \\n    }\\n\\n    function getFunder(uint256 index) public view returns (address) {\\n        return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder) public view returns (uint256) {\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns (AggregatorV3Interface) {\\n        return s_priceFeed;\\n    }\\n}\\n\",\"keccak256\":\"0xc76a175f440db3e9a023c57cf9e7e650b7f9d61894b18c44776d23ca5e62cf91\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n        // Goerli ETH / USD Address\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n        // or (Both will do the same thing)\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // or (Both will do the same thing)\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\",\"keccak256\":\"0xc5798533e9e90b5e1010377965b07bff5365f76592f0c7a44ed5efc327c920a7\",\"license\":\"MIT\"}},\"version\":1}",
    "bytecode": "0x60a06040523480156200001157600080fd5b506040516200138438038062001384833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6112056200017f600039600081816104160152818161065c01526106ac01526112056000f3fe60806040526004361061008a5760003560e01c8063893d20e811610059578063893d20e81461014d5780639e87a5cd14610178578063b60d4288146101a3578063be2693f0146101ad578063d7b4750c146101b757610099565b80630343fb25146100a35780630d8e6e2c146100e05780633ccfd60b1461010b5780636b69a5921461012257610099565b36610099576100976101f4565b005b6100a16101f4565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610b7c565b610325565b6040516100d79190610bc2565b60405180910390f35b3480156100ec57600080fd5b506100f561036d565b6040516101029190610bc2565b60405180910390f35b34801561011757600080fd5b50610120610414565b005b34801561012e57600080fd5b5061013761064b565b6040516101449190610bc2565b60405180910390f35b34801561015957600080fd5b50610162610658565b60405161016f9190610bec565b60405180910390f35b34801561018457600080fd5b5061018d610680565b60405161019a9190610c66565b60405180910390f35b6101ab6101f4565b005b6101b56106aa565b005b3480156101c357600080fd5b506101de60048036038101906101d99190610cad565b61094e565b6040516101eb9190610bec565b60405180910390f35b6802b5e3af16b1880000610233600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461099690919063ffffffff16565b101561026b576040517fb8cca71b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102b99190610d09565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103d757600080fd5b505afa1580156103eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040f9190610d74565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610499576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610544576000600182815481106104bf576104be610da1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061053c90610dd0565b91505061049c565b50600067ffffffffffffffff8111156105605761055f610e19565b5b60405190808252806020026020018201604052801561058e5781602001602082028036833780820191505090505b50600190805190602001906105a4929190610a72565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105cb90610e79565b60006040518083038185875af1925050503d8060008114610608576040519150601f19603f3d011682016040523d82523d6000602084013e61060d565b606091505b5050905080610648576040517fbeccced600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461072f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156107b357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610769575b5050505050905060005b815181101561083d5760008282815181106107db576107da610da1565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061083590610dd0565b9150506107bd565b50600067ffffffffffffffff81111561085957610858610e19565b5b6040519080825280602002602001820160405280156108875781602001602082028036833780820191505090505b506001908051906020019061089d929190610a72565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516108c490610e79565b60006040518083038185875af1925050503d8060008114610901576040519150601f19603f3d011682016040523d82523d6000602084013e610906565b606091505b505090508061094a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094190610eeb565b60405180910390fd5b5050565b60006001828154811061096457610963610da1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806109a2836109d2565b90506000670de0b6b3a764000085836109bb9190610f0b565b6109c59190610f94565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a1b57600080fd5b505afa158015610a2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a53919061103d565b5050509150506402540be40081610a6a91906110b8565b915050919050565b828054828255906000526020600020908101928215610aeb579160200282015b82811115610aea5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a92565b5b509050610af89190610afc565b5090565b5b80821115610b15576000816000905550600101610afd565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b4982610b1e565b9050919050565b610b5981610b3e565b8114610b6457600080fd5b50565b600081359050610b7681610b50565b92915050565b600060208284031215610b9257610b91610b19565b5b6000610ba084828501610b67565b91505092915050565b6000819050919050565b610bbc81610ba9565b82525050565b6000602082019050610bd76000830184610bb3565b92915050565b610be681610b3e565b82525050565b6000602082019050610c016000830184610bdd565b92915050565b6000819050919050565b6000610c2c610c27610c2284610b1e565b610c07565b610b1e565b9050919050565b6000610c3e82610c11565b9050919050565b6000610c5082610c33565b9050919050565b610c6081610c45565b82525050565b6000602082019050610c7b6000830184610c57565b92915050565b610c8a81610ba9565b8114610c9557600080fd5b50565b600081359050610ca781610c81565b92915050565b600060208284031215610cc357610cc2610b19565b5b6000610cd184828501610c98565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d1482610ba9565b9150610d1f83610ba9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d5457610d53610cda565b5b828201905092915050565b600081519050610d6e81610c81565b92915050565b600060208284031215610d8a57610d89610b19565b5b6000610d9884828501610d5f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610ddb82610ba9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e0e57610e0d610cda565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e63600083610e48565b9150610e6e82610e53565b600082019050919050565b6000610e8482610e56565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ed5600b83610e8e565b9150610ee082610e9f565b602082019050919050565b60006020820190508181036000830152610f0481610ec8565b9050919050565b6000610f1682610ba9565b9150610f2183610ba9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f5a57610f59610cda565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f9f82610ba9565b9150610faa83610ba9565b925082610fba57610fb9610f65565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610fe481610fc5565b8114610fef57600080fd5b50565b60008151905061100181610fdb565b92915050565b6000819050919050565b61101a81611007565b811461102557600080fd5b50565b60008151905061103781611011565b92915050565b600080600080600060a0868803121561105957611058610b19565b5b600061106788828901610ff2565b955050602061107888828901611028565b945050604061108988828901610d5f565b935050606061109a88828901610d5f565b92505060806110ab88828901610ff2565b9150509295509295909350565b60006110c382611007565b91506110ce83611007565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561110d5761110c610cda565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561114a57611149610cda565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561118757611186610cda565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111c4576111c3610cda565b5b82820290509291505056fea2646970667358221220565983411a4369656b34b3c55c323400d52440e07c06abb1274d551f11c53c3764736f6c63430008080033",
    "deployedBytecode": "0x60806040526004361061008a5760003560e01c8063893d20e811610059578063893d20e81461014d5780639e87a5cd14610178578063b60d4288146101a3578063be2693f0146101ad578063d7b4750c146101b757610099565b80630343fb25146100a35780630d8e6e2c146100e05780633ccfd60b1461010b5780636b69a5921461012257610099565b36610099576100976101f4565b005b6100a16101f4565b005b3480156100af57600080fd5b506100ca60048036038101906100c59190610b7c565b610325565b6040516100d79190610bc2565b60405180910390f35b3480156100ec57600080fd5b506100f561036d565b6040516101029190610bc2565b60405180910390f35b34801561011757600080fd5b50610120610414565b005b34801561012e57600080fd5b5061013761064b565b6040516101449190610bc2565b60405180910390f35b34801561015957600080fd5b50610162610658565b60405161016f9190610bec565b60405180910390f35b34801561018457600080fd5b5061018d610680565b60405161019a9190610c66565b60405180910390f35b6101ab6101f4565b005b6101b56106aa565b005b3480156101c357600080fd5b506101de60048036038101906101d99190610cad565b61094e565b6040516101eb9190610bec565b60405180910390f35b6802b5e3af16b1880000610233600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461099690919063ffffffff16565b101561026b576040517fb8cca71b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546102b99190610d09565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b1580156103d757600080fd5b505afa1580156103eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040f9190610d74565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610499576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b600180549050811015610544576000600182815481106104bf576104be610da1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061053c90610dd0565b91505061049c565b50600067ffffffffffffffff8111156105605761055f610e19565b5b60405190808252806020026020018201604052801561058e5781602001602082028036833780820191505090505b50600190805190602001906105a4929190610a72565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516105cb90610e79565b60006040518083038185875af1925050503d8060008114610608576040519150601f19603f3d011682016040523d82523d6000602084013e61060d565b606091505b5050905080610648576040517fbeccced600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461072f576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156107b357602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610769575b5050505050905060005b815181101561083d5760008282815181106107db576107da610da1565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061083590610dd0565b9150506107bd565b50600067ffffffffffffffff81111561085957610858610e19565b5b6040519080825280602002602001820160405280156108875781602001602082028036833780820191505090505b506001908051906020019061089d929190610a72565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516108c490610e79565b60006040518083038185875af1925050503d8060008114610901576040519150601f19603f3d011682016040523d82523d6000602084013e610906565b606091505b505090508061094a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161094190610eeb565b60405180910390fd5b5050565b60006001828154811061096457610963610da1565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806109a2836109d2565b90506000670de0b6b3a764000085836109bb9190610f0b565b6109c59190610f94565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a1b57600080fd5b505afa158015610a2f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a53919061103d565b5050509150506402540be40081610a6a91906110b8565b915050919050565b828054828255906000526020600020908101928215610aeb579160200282015b82811115610aea5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a92565b5b509050610af89190610afc565b5090565b5b80821115610b15576000816000905550600101610afd565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b4982610b1e565b9050919050565b610b5981610b3e565b8114610b6457600080fd5b50565b600081359050610b7681610b50565b92915050565b600060208284031215610b9257610b91610b19565b5b6000610ba084828501610b67565b91505092915050565b6000819050919050565b610bbc81610ba9565b82525050565b6000602082019050610bd76000830184610bb3565b92915050565b610be681610b3e565b82525050565b6000602082019050610c016000830184610bdd565b92915050565b6000819050919050565b6000610c2c610c27610c2284610b1e565b610c07565b610b1e565b9050919050565b6000610c3e82610c11565b9050919050565b6000610c5082610c33565b9050919050565b610c6081610c45565b82525050565b6000602082019050610c7b6000830184610c57565b92915050565b610c8a81610ba9565b8114610c9557600080fd5b50565b600081359050610ca781610c81565b92915050565b600060208284031215610cc357610cc2610b19565b5b6000610cd184828501610c98565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d1482610ba9565b9150610d1f83610ba9565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610d5457610d53610cda565b5b828201905092915050565b600081519050610d6e81610c81565b92915050565b600060208284031215610d8a57610d89610b19565b5b6000610d9884828501610d5f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610ddb82610ba9565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610e0e57610e0d610cda565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610e63600083610e48565b9150610e6e82610e53565b600082019050919050565b6000610e8482610e56565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610ed5600b83610e8e565b9150610ee082610e9f565b602082019050919050565b60006020820190508181036000830152610f0481610ec8565b9050919050565b6000610f1682610ba9565b9150610f2183610ba9565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610f5a57610f59610cda565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610f9f82610ba9565b9150610faa83610ba9565b925082610fba57610fb9610f65565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610fe481610fc5565b8114610fef57600080fd5b50565b60008151905061100181610fdb565b92915050565b6000819050919050565b61101a81611007565b811461102557600080fd5b50565b60008151905061103781611011565b92915050565b600080600080600060a0868803121561105957611058610b19565b5b600061106788828901610ff2565b955050602061107888828901611028565b945050604061108988828901610d5f565b935050606061109a88828901610d5f565b92505060806110ab88828901610ff2565b9150509295509295909350565b60006110c382611007565b91506110ce83611007565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561110d5761110c610cda565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561114a57611149610cda565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561118757611186610cda565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156111c4576111c3610cda565b5b82820290509291505056fea2646970667358221220565983411a4369656b34b3c55c323400d52440e07c06abb1274d551f11c53c3764736f6c63430008080033",
    "devdoc": {
        "author": "Patric Collins",
        "details": "This implements price feeds as our library",
        "kind": "dev",
        "methods": {
            "fund()": {
                "details": "This implements price feeds as our library"
            }
        },
        "title": "A contract for crowd funding",
        "version": 1
    },
    "userdoc": {
        "kind": "user",
        "methods": {
            "fund()": {
                "notice": "This function funds this contract"
            }
        },
        "notice": "This contract is to demo sample funcding contract",
        "version": 1
    },
    "storageLayout": {
        "storage": [
            {
                "astId": 63,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_addressToAmountFunded",
                "offset": 0,
                "slot": "0",
                "type": "t_mapping(t_address,t_uint256)"
            },
            {
                "astId": 66,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_funders",
                "offset": 0,
                "slot": "1",
                "type": "t_array(t_address)dyn_storage"
            },
            {
                "astId": 78,
                "contract": "contracts/FundMe.sol:FundMe",
                "label": "s_priceFeed",
                "offset": 0,
                "slot": "2",
                "type": "t_contract(AggregatorV3Interface)45"
            }
        ],
        "types": {
            "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
            },
            "t_array(t_address)dyn_storage": {
                "base": "t_address",
                "encoding": "dynamic_array",
                "label": "address[]",
                "numberOfBytes": "32"
            },
            "t_contract(AggregatorV3Interface)45": {
                "encoding": "inplace",
                "label": "contract AggregatorV3Interface",
                "numberOfBytes": "20"
            },
            "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
            },
            "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
            }
        }
    }
}
